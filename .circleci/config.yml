version: 2.1

job-defaults: &job-defaults
  working_directory: &working_directory
                       ~/aws-maven
  environment:
    TEST_RESULTS: /tmp/test-results
    AWS_PROFILE: dev/vault
    AWS_DEFAULT_REGION: us-west-2
    AWS_REGION: us-west-2
    
attach-workspace: &attach-workspace
  attach_workspace:
    at: *working_directory

setup-env: &setup-env
  run:
    name: Setup ENV
    command: |
      ./.circleci/setup-aws-config.sh
      ./.circleci/setup-maven-m2-mirrors.sh

docker-login: &docker-login
  - run:
      name: Docker Login
      command: |
        unset AWS_ACCESS_KEY_ID; unset AWS_SECRET_ACCESS_KEY;
        ./.circleci/docker-login.sh

# Template to save Maven dependency cache to restore it in another jobs
save-maven-cache: &save-maven-cache
  save_cache:
    key: aws-maven-{{ checksum "pom.xml" }}
    paths:
      - ~/.m2

restore-maven-cache: &restore-maven-cache
  restore_cache:
    key: aws-maven-{{ checksum "pom.xml" }}

setup-gpg: &setup-gpg
  run:
    name: "Configuring gpg"
    command: |
      echo -e "$GPG_SECRET_KEY" | gpg --import --no-tty --batch --yes
machine-setup: &machine-setup
  machine:
    docker_layer_caching: false
    image: maven:3.9-eclipse-temurin-17
jobs:
  build:
    <<: *job-defaults
    <<: *machine-setup
    working_directory: *working_directory
    docker:
      - image: 190066226418.dkr.ecr.us-east-1.amazonaws.com/base/jvm11:20240413-f5906f03
    steps:
      - *setup-gpg
      - checkout
      - *attach-workspace
      - <<: *setup-env
      - <<: *docker-login
      - run: gpg --version
      - run: gpg --list-secret-keys
      - run: ls -ld ~/.gnupg
      - run: mvn clean dependency:go-offline package install -U -DskipTests -T 2.0C -B
      - <<: *save-maven-cache
      - persist_to_workspace:
          root: *working_directory
          paths:
            - "*"

  test:
    <<: *job-defaults
    <<: *machine-setup
    working_directory: *working_directory
    docker:
      - image: 190066226418.dkr.ecr.us-east-1.amazonaws.com/base/jvm11:20240413-f5906f03
    steps:
      - *setup-gpg
      - *attach-workspace
      - <<: *setup-env
      - <<: *docker-login
      - <<: *restore-maven-cache
      - run: mvn verify

workflows:
  build_and_test:
    jobs:
      - build:
          context:
            - circleci
            - github
            - artifact-publisher
          filters:
            tags:
              only: /.*/

      - test:
          context:
            - circleci
            - github
            - artifact-publisher
          requires:
            - build
